@model TeamProject.DataModels.Post

@{
    ViewBag.Title = "Create";
}
<style>
    div {
        color: black;
    }

    a.my-class {
        color: #000000;
    }

    .title-h1 {
        margin-left: 40px;
    }
</style>
@using TeamProject.Extensions
@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h1 class="title-h1">Create Post</h1>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.Title, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Title, new { htmlAttributes = new { @class = "form-control hvr-grow" } })
                @Html.ValidationMessageFor(model => model.Title, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">

            @Html.LabelFor(model => model.Body, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextAreaFor(model => model.Body, new { @class = "form-control hvr-grow resize-box", @cols = 45, @rows = 10 })
                @Html.ValidationMessageFor(model => model.Body, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control hvr-grow" } })
                @Html.ValidationMessageFor(model => model.Description, null, new { @class = "text-danger" })
            </div>
        </div>

        

            @*@Html.LabelFor(model => model.PostImages, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <div>
                    <input type="file" name="UploadFile" id="txtUploadFile" class="makethispretty" />
                </div>
            </div>*@
        <div class="form-group">
            <div class="form-group">
                @Html.LabelFor(model => model.PostVideo, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.PostVideo, new { htmlAttributes = new { @class = "form-control hvr-grow" } })
                    @Html.ValidationMessageFor(model => model.PostVideo, "", new { @class = "text-danger" })
                </div>
            </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.IsPublic, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    <div class="checkbox">
                        @Html.EditorFor(model => model.IsPublic)
                        @Html.ValidationMessageFor(model => model.IsPublic, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>

            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" value="Create" class="btn btn-create my-btns hvr-pulse" />
                </div>
            </div>
        </div>
}


@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    @Scripts.Render("~/bundles/ajax")
    @Scripts.Render("~/Scripts/Handlers/fileUpload.js")
}
